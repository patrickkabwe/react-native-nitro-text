///
/// HybridNitroTextSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroTextSpec.hpp"

namespace margelo::nitro::nitrotext {

  void HybridNitroTextSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("fragments", &HybridNitroTextSpec::getFragments);
      prototype.registerHybridSetter("fragments", &HybridNitroTextSpec::setFragments);
      prototype.registerHybridGetter("selectable", &HybridNitroTextSpec::getSelectable);
      prototype.registerHybridSetter("selectable", &HybridNitroTextSpec::setSelectable);
      prototype.registerHybridGetter("ellipsizeMode", &HybridNitroTextSpec::getEllipsizeMode);
      prototype.registerHybridSetter("ellipsizeMode", &HybridNitroTextSpec::setEllipsizeMode);
      prototype.registerHybridGetter("onSelectableTextMeasured", &HybridNitroTextSpec::getOnSelectableTextMeasured);
      prototype.registerHybridSetter("onSelectableTextMeasured", &HybridNitroTextSpec::setOnSelectableTextMeasured);
      prototype.registerHybridGetter("fontSize", &HybridNitroTextSpec::getFontSize);
      prototype.registerHybridSetter("fontSize", &HybridNitroTextSpec::setFontSize);
      prototype.registerHybridGetter("fontWeight", &HybridNitroTextSpec::getFontWeight);
      prototype.registerHybridSetter("fontWeight", &HybridNitroTextSpec::setFontWeight);
      prototype.registerHybridGetter("fontColor", &HybridNitroTextSpec::getFontColor);
      prototype.registerHybridSetter("fontColor", &HybridNitroTextSpec::setFontColor);
      prototype.registerHybridGetter("fontStyle", &HybridNitroTextSpec::getFontStyle);
      prototype.registerHybridSetter("fontStyle", &HybridNitroTextSpec::setFontStyle);
      prototype.registerHybridGetter("lineHeight", &HybridNitroTextSpec::getLineHeight);
      prototype.registerHybridSetter("lineHeight", &HybridNitroTextSpec::setLineHeight);
      prototype.registerHybridGetter("text", &HybridNitroTextSpec::getText);
      prototype.registerHybridSetter("text", &HybridNitroTextSpec::setText);
      prototype.registerHybridGetter("numberOfLines", &HybridNitroTextSpec::getNumberOfLines);
      prototype.registerHybridSetter("numberOfLines", &HybridNitroTextSpec::setNumberOfLines);
      prototype.registerHybridGetter("textAlign", &HybridNitroTextSpec::getTextAlign);
      prototype.registerHybridSetter("textAlign", &HybridNitroTextSpec::setTextAlign);
      prototype.registerHybridGetter("textTransform", &HybridNitroTextSpec::getTextTransform);
      prototype.registerHybridSetter("textTransform", &HybridNitroTextSpec::setTextTransform);
    });
  }

} // namespace margelo::nitro::nitrotext
