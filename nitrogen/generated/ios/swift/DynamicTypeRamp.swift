///
/// DynamicTypeRamp.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `DynamicTypeRamp`, backed by a C++ enum.
 */
public typealias DynamicTypeRamp = margelo.nitro.nitrotext.DynamicTypeRamp

public extension DynamicTypeRamp {
  /**
   * Get a DynamicTypeRamp for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "caption2":
        self = .caption2
      case "caption1":
        self = .caption1
      case "footnote":
        self = .footnote
      case "subheadline":
        self = .subheadline
      case "callout":
        self = .callout
      case "body":
        self = .body
      case "headline":
        self = .headline
      case "title3":
        self = .title3
      case "title2":
        self = .title2
      case "title1":
        self = .title1
      case "largeTitle":
        self = .largetitle
      default:
        return nil
    }
  }

  /**
   * Get the String value this DynamicTypeRamp represents.
   */
  var stringValue: String {
    switch self {
      case .caption2:
        return "caption2"
      case .caption1:
        return "caption1"
      case .footnote:
        return "footnote"
      case .subheadline:
        return "subheadline"
      case .callout:
        return "callout"
      case .body:
        return "body"
      case .headline:
        return "headline"
      case .title3:
        return "title3"
      case .title2:
        return "title2"
      case .title1:
        return "title1"
      case .largetitle:
        return "largeTitle"
    }
  }
}
