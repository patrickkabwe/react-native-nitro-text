///
/// FontWeight.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `FontWeight`, backed by a C++ enum.
 */
public typealias FontWeight = margelo.nitro.nitrotext.FontWeight

public extension FontWeight {
  /**
   * Get a FontWeight for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "normal":
        self = .normal
      case "bold":
        self = .bold
      case "ultralight":
        self = .ultralight
      case "thin":
        self = .thin
      case "light":
        self = .light
      case "medium":
        self = .medium
      case "regular":
        self = .regular
      case "semibold":
        self = .semibold
      case "condensedBold":
        self = .condensedbold
      case "condensed":
        self = .condensed
      case "heavy":
        self = .heavy
      case "black":
        self = .black
      default:
        return nil
    }
  }

  /**
   * Get the String value this FontWeight represents.
   */
  var stringValue: String {
    switch self {
      case .normal:
        return "normal"
      case .bold:
        return "bold"
      case .ultralight:
        return "ultralight"
      case .thin:
        return "thin"
      case .light:
        return "light"
      case .medium:
        return "medium"
      case .regular:
        return "regular"
      case .semibold:
        return "semibold"
      case .condensedbold:
        return "condensedBold"
      case .condensed:
        return "condensed"
      case .heavy:
        return "heavy"
      case .black:
        return "black"
    }
  }
}
