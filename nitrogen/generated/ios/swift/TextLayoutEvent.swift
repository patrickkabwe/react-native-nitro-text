///
/// TextLayoutEvent.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `TextLayoutEvent`, backed by a C++ struct.
 */
public typealias TextLayoutEvent = margelo.nitro.nitrotext.TextLayoutEvent

public extension TextLayoutEvent {
  private typealias bridge = margelo.nitro.nitrotext.bridge.swift

  /**
   * Create a new instance of `TextLayoutEvent`.
   */
  init(lines: [TextLayout]) {
    self.init({ () -> bridge.std__vector_TextLayout_ in
      var __vector = bridge.create_std__vector_TextLayout_(lines.count)
      for __item in lines {
        __vector.push_back(__item)
      }
      return __vector
    }())
  }

  var lines: [TextLayout] {
    @inline(__always)
    get {
      return self.__lines.map({ __item in __item })
    }
    @inline(__always)
    set {
      self.__lines = { () -> bridge.std__vector_TextLayout_ in
        var __vector = bridge.create_std__vector_TextLayout_(newValue.count)
        for __item in newValue {
          __vector.push_back(__item)
        }
        return __vector
      }()
    }
  }
}
