///
/// NitroText-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "NitroText-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridNitroTextSpecSwift.hpp"
#include "NitroText-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::nitrotext::bridge::swift {

  // pragma MARK: std::function<void(const TextLayoutEvent& /* layout */)>
  Func_void_TextLayoutEvent create_Func_void_TextLayoutEvent(void* NON_NULL swiftClosureWrapper) noexcept {
    auto swiftClosure = NitroText::Func_void_TextLayoutEvent::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const TextLayoutEvent& layout) mutable -> void {
      swiftClosure.call(layout);
    };
  }
  
  // pragma MARK: std::function<void()>
  Func_void create_Func_void(void* NON_NULL swiftClosureWrapper) noexcept {
    auto swiftClosure = NitroText::Func_void::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)]() mutable -> void {
      swiftClosure.call();
    };
  }
  
  // pragma MARK: std::shared_ptr<HybridNitroTextSpec>
  std::shared_ptr<HybridNitroTextSpec> create_std__shared_ptr_HybridNitroTextSpec_(void* NON_NULL swiftUnsafePointer) noexcept {
    NitroText::HybridNitroTextSpec_cxx swiftPart = NitroText::HybridNitroTextSpec_cxx::fromUnsafe(swiftUnsafePointer);
    return std::make_shared<margelo::nitro::nitrotext::HybridNitroTextSpecSwift>(swiftPart);
  }
  void* NON_NULL get_std__shared_ptr_HybridNitroTextSpec_(std__shared_ptr_HybridNitroTextSpec_ cppType) noexcept {
    std::shared_ptr<margelo::nitro::nitrotext::HybridNitroTextSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::nitrotext::HybridNitroTextSpecSwift>(cppType);
    #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridNitroTextSpec\" is not implemented in Swift!");
    }
    #endif
    NitroText::HybridNitroTextSpec_cxx& swiftPart = swiftWrapper->getSwiftPart();
    return swiftPart.toUnsafe();
  }

} // namespace margelo::nitro::nitrotext::bridge::swift
