///
/// NitroText-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `DynamicTypeRamp` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class DynamicTypeRamp; }
// Forward declaration of `EllipsizeMode` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class EllipsizeMode; }
// Forward declaration of `FontStyle` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class FontStyle; }
// Forward declaration of `FontWeight` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class FontWeight; }
// Forward declaration of `Fragment` to properly resolve imports.
namespace margelo::nitro::nitrotext { struct Fragment; }
// Forward declaration of `HybridNitroTextSpec` to properly resolve imports.
namespace margelo::nitro::nitrotext { class HybridNitroTextSpec; }
// Forward declaration of `LineBreakStrategyIOS` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class LineBreakStrategyIOS; }
// Forward declaration of `TextAlign` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class TextAlign; }
// Forward declaration of `TextDecorationLine` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class TextDecorationLine; }
// Forward declaration of `TextDecorationStyle` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class TextDecorationStyle; }
// Forward declaration of `TextLayoutEvent` to properly resolve imports.
namespace margelo::nitro::nitrotext { struct TextLayoutEvent; }
// Forward declaration of `TextLayout` to properly resolve imports.
namespace margelo::nitro::nitrotext { struct TextLayout; }
// Forward declaration of `TextTransform` to properly resolve imports.
namespace margelo::nitro::nitrotext { enum class TextTransform; }

// Include C++ defined types
#include "DynamicTypeRamp.hpp"
#include "EllipsizeMode.hpp"
#include "FontStyle.hpp"
#include "FontWeight.hpp"
#include "Fragment.hpp"
#include "HybridNitroTextSpec.hpp"
#include "LineBreakStrategyIOS.hpp"
#include "TextAlign.hpp"
#include "TextDecorationLine.hpp"
#include "TextDecorationStyle.hpp"
#include "TextLayout.hpp"
#include "TextLayoutEvent.hpp"
#include "TextTransform.hpp"
#include <functional>
#include <memory>
#include <optional>
#include <string>
#include <vector>

// C++ helpers for Swift
#include "NitroText-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridNitroTextSpec_cxx` to properly resolve imports.
namespace NitroText { class HybridNitroTextSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroText-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroText".
#include "NitroText-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroText/NitroText-Swift.h>)
#include <NitroText/NitroText-Swift.h>
#else
#error NitroText's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroText", and try building the app first.
#endif
